/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/screenmenu_screen/ScreenMenuView.hpp>
#include <gui/screenmenu_screen/ScreenMenuPresenter.hpp>
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <gui/screenfan_screen/ScreenFanView.hpp>
#include <gui/screenfan_screen/ScreenFanPresenter.hpp>
#include <gui/screencurve_screen/ScreenCurveView.hpp>
#include <gui/screencurve_screen/ScreenCurvePresenter.hpp>
#include <gui/screeneffect_screen/ScreenEffectView.hpp>
#include <gui/screeneffect_screen/ScreenEffectPresenter.hpp>
#include <gui/screeneffectset_screen/ScreenEffectSetView.hpp>
#include <gui/screeneffectset_screen/ScreenEffectSetPresenter.hpp>
#include <gui/screencontrol_screen/ScreenControlView.hpp>
#include <gui/screencontrol_screen/ScreenControlPresenter.hpp>
#include <gui/screendmx_screen/ScreenDMXView.hpp>
#include <gui/screendmx_screen/ScreenDMXPresenter.hpp>
#include <gui/screenbluetooth_screen/ScreenBluetoothView.hpp>
#include <gui/screenbluetooth_screen/ScreenBluetoothPresenter.hpp>
#include <gui/screenlanguage_screen/ScreenLanguageView.hpp>
#include <gui/screenlanguage_screen/ScreenLanguagePresenter.hpp>
#include <gui/screenstudio_screen/ScreenStudioView.hpp>
#include <gui/screenstudio_screen/ScreenStudioPresenter.hpp>
#include <gui/screenupdate_screen/ScreenUpdateView.hpp>
#include <gui/screenupdate_screen/ScreenUpdatePresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< ScreenMenuView,
            touchgfx::meta::TypeList< Screen1View,
            touchgfx::meta::TypeList< ScreenFanView,
            touchgfx::meta::TypeList< ScreenCurveView,
            touchgfx::meta::TypeList< ScreenEffectView,
            touchgfx::meta::TypeList< ScreenEffectSetView,
            touchgfx::meta::TypeList< ScreenControlView,
            touchgfx::meta::TypeList< ScreenDMXView,
            touchgfx::meta::TypeList< ScreenBluetoothView,
            touchgfx::meta::TypeList< ScreenLanguageView,
            touchgfx::meta::TypeList< ScreenStudioView,
            touchgfx::meta::TypeList< ScreenUpdateView,
            touchgfx::meta::Nil > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< ScreenMenuPresenter,
            touchgfx::meta::TypeList< Screen1Presenter,
            touchgfx::meta::TypeList< ScreenFanPresenter,
            touchgfx::meta::TypeList< ScreenCurvePresenter,
            touchgfx::meta::TypeList< ScreenEffectPresenter,
            touchgfx::meta::TypeList< ScreenEffectSetPresenter,
            touchgfx::meta::TypeList< ScreenControlPresenter,
            touchgfx::meta::TypeList< ScreenDMXPresenter,
            touchgfx::meta::TypeList< ScreenBluetoothPresenter,
            touchgfx::meta::TypeList< ScreenLanguagePresenter,
            touchgfx::meta::TypeList< ScreenStudioPresenter,
            touchgfx::meta::TypeList< ScreenUpdatePresenter,
            touchgfx::meta::Nil > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::Nil
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreenMenuScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
